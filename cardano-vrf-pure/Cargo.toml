[package]
name = "cardano-vrf-pure"
version = "0.1.0"
edition = "2024"
authors = ["FractionEstate"]
license = "Apache-2.0 OR MIT"
description = "Pure Rust VRF (Verifiable Random Function) for Cardano - IETF Draft-03 and Draft-13 compliant"
repository = "https://github.com/FractionEstate/cardano-base-rust"
homepage = "https://github.com/FractionEstate/cardano-base-rust"
documentation = "https://docs.rs/cardano-vrf-pure"
keywords = ["cardano", "vrf", "cryptography", "verifiable-random-function", "blockchain"]
categories = ["cryptography", "no-std"]
rust-version = "1.85"

[lints]
workspace = true

[dependencies]
# Core cryptographic primitives
curve25519-dalek = { version = "4.1", features = ["digest", "rand_core"] }
sha2 = "0.10"
rand_core = "0.9.3"
num-bigint = { version = "0.4", default-features = false, features = ["std"] }
num-traits = { version = "0.2", default-features = false, features = ["std"] }

# Utilities
subtle = "2.6.1"
zeroize = { version = "1.7", features = ["derive"] }
thiserror = "2.0.17"
once_cell = "1.19"

[dev-dependencies]
hex = "0.4"
rand = "0.9.2"
criterion = { version = "0.7.0", features = ["html_reports"] }

[[bench]]
name = "vrf_benchmark"
harness = false

[features]
default = []
# Enable verbose VRF debug logging
vrf-debug = []
# Experimental FieldElement-based draft13 hash-to-curve path (currently unstable)
field-h2c-experimental = []
